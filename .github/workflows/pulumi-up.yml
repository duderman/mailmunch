name: pulumi-up

on:
  workflow_dispatch:
    inputs:
      stack:
        description: Pulumi stack name
        required: true
        default: dev
      ref:
        description: Git ref (branch or commit SHA) to deploy
        required: false
        default: main
  workflow_run:
    workflows:
      - build
    types:
      - completed
    branches:
      - main

jobs:
  up:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      actions: read
      attestations: read
    environment: production
    if: >
      ${{ (github.event_name == 'workflow_dispatch') ||
          (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    steps:
      - name: Checkout (same commit as build when applicable)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'workflow_run' && github.event.workflow_run.head_sha || github.event.inputs.ref }}

      - name: Download lambda artifact from build workflow
        if: ${{ github.event_name == 'workflow_run' }}
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          event: push
          commit: ${{ github.event.workflow_run.head_sha }}
          name: lambda-zips
          path: dist/
          if_no_artifact_found: fail

      - name: Download lambda artifact for manual ref
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: dawidd6/action-download-artifact@v11
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          name: lambda-zips
          path: dist/
          # Try to match either by commit or branch name
          commit: ${{ github.event.inputs.ref }}
          branch: ${{ github.event.inputs.ref }}
          if_no_artifact_found: fail

      - name: Setup Go (for Pulumi program)
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'
          cache: true
          cache-dependency-path: infra/go.sum

      - name: Build Pulumi binary
        working-directory: infra
        run: |
          go mod tidy
          go build -o infra

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Pulumi Up
        uses: pulumi/actions@v5
        with:
          command: up
          stack-name: ${{ github.event.inputs.stack || 'dev' }}
          upsert: true
          work-dir: infra
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
concurrency:
  group: up-${{ github.event.inputs.stack || 'dev' }}
  cancel-in-progress: false
